import type { SettingItem } from '../SettingItem/SettingItem.ts'
import * as InputName from '../InputName/InputName.ts'
import * as SettingItemType from '../SettingItemType/SettingItemType.ts'
import * as SettingStrings from '../SettingStrings/SettingStrings.ts'

export const getSettingItems = async (): Promise<readonly SettingItem[]> => {
  return [
    {
      id: 'fontSize',
      heading: SettingStrings.fontSize(),
      description: SettingStrings.fontSizeDescription(),
      type: SettingItemType.Number,
      value: '15px',
      category: InputName.TextEditorTab,
    },
    {
      id: 'fontFamily',
      heading: SettingStrings.fontFamily(),
      description: SettingStrings.fontFamilyDescription(),
      type: SettingItemType.String,
      value: 'Fira Code',
      category: InputName.TextEditorTab,
    },
    {
      id: 'theme',
      heading: SettingStrings.theme(),
      description: SettingStrings.themeDescription(),
      type: SettingItemType.String,
      value: 'Dark',
      category: InputName.WorkbenchTab,
    },
    {
      id: 'sidebarPosition',
      heading: SettingStrings.sidebarPosition(),
      description: SettingStrings.sidebarPositionDescription(),
      type: SettingItemType.String,
      value: 'Left',
      category: InputName.WorkbenchTab,
    },
    {
      id: 'windowTitle',
      heading: SettingStrings.windowTitle(),
      description: SettingStrings.windowTitleDescription(),
      type: SettingItemType.String,
      value: 'Settings View',
      category: InputName.WindowTab,
    },
    {
      id: 'windowSize',
      heading: SettingStrings.windowSize(),
      description: SettingStrings.windowSizeDescription(),
      type: SettingItemType.String,
      value: '1024x768',
      category: InputName.WindowTab,
    },
    {
      id: 'autoSave',
      heading: SettingStrings.autoSave(),
      description: SettingStrings.autoSaveDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.FeaturesTab,
    },
    {
      id: 'formatOnSave',
      heading: SettingStrings.formatOnSave(),
      description: SettingStrings.formatOnSaveDescription(),
      type: SettingItemType.Boolean,
      value: 'false',
      category: InputName.FeaturesTab,
    },
    {
      id: 'telemetry',
      heading: SettingStrings.telemetry(),
      description: SettingStrings.telemetryDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.ApplicationsTab,
    },
    {
      id: 'updates',
      heading: SettingStrings.autoUpdates(),
      description: SettingStrings.autoUpdatesDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.ApplicationsTab,
    },
    {
      id: 'encryption',
      heading: SettingStrings.fileEncryption(),
      description: SettingStrings.fileEncryptionDescription(),
      type: SettingItemType.Boolean,
      value: 'false',
      category: InputName.SecurityTab,
    },
    {
      id: 'twoFactor',
      heading: SettingStrings.twoFactorAuth(),
      description: SettingStrings.twoFactorAuthDescription(),
      type: SettingItemType.Boolean,
      value: 'false',
      category: InputName.SecurityTab,
    },
    {
      id: 'extensionsAutoUpdate',
      heading: SettingStrings.autoUpdateExtensions(),
      description: SettingStrings.autoUpdateExtensionsDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.ExtensionsTab,
    },
    {
      id: 'extensionRecommendations',
      heading: SettingStrings.extensionRecommendations(),
      description: SettingStrings.extensionRecommendationsDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.ExtensionsTab,
    },
  ]
}
