export const AddWatchExpression = 'Add Watch Expression'
export const AutoSave = 'Auto Save'
export const AutoSaveDescription = 'Automatically save files'
export const AutoUpdateExtensions = 'Auto Update Extensions'
export const AutoUpdateExtensionsDescription = 'Automatically update extensions'
export const AutoUpdates = 'Auto Updates'
export const AutoUpdatesDescription = 'Automatically check for updates'
export const Block = 'Block'
export const BreakPoints = 'BreakPoints'
export const CallStack = 'Call Stack'
export const Catch = '`Catch` block'
export const Clear = 'Clear'
export const Closure = 'Closure'
export const DebuggerPaused = 'Debugger paused'
export const DebuggerPausedOnException = 'Paused on exception'
export const Eval = 'Eval'
export const Expression = 'Expression'
export const ExtensionRecommendations = 'Extension Recommendations'
export const ExtensionRecommendationsDescription = 'Show extension recommendations'
export const FileEncryption = 'File Encryption'
export const FileEncryptionDescription = 'Encrypt sensitive files'
export const FontFamily = 'Font Family'
export const FontFamilyDescription = 'The font family of the editor'
export const FontSize = 'Font Size'
export const FontSizeDescription = 'The font size of the editor'
export const FormatOnSave = 'Format on Save'
export const FormatOnSaveDescription = 'Format code when saving'
export const Global = 'Global'
export const Local = 'Local'
export const Module = 'Module'
export const NamedClosure = 'Closure ({PH1})'
export const NoScriptRunning =
  'No script running. To enable debugging, start a Node.js script with debugging enabled (e.g. node --inspect your-script.js) and connect to it.'
export const NotPaused = 'Not Paused'
export const NumberValue = 'number value'
export const Pause = 'Pause'
export const RefreshWatchExpressions = 'Refresh Watch Expressions'
export const Restart = 'Restart'
export const Resume = 'Resume'
export const Scope = 'Scope'
export const Script = 'Script'
export const SearchSettings = 'Search Settings'
export const SettingsContent = 'Settings Content'
export const SettingsSideBar = 'Settings SideBar'
export const SidebarPosition = 'Sidebar Position'
export const SidebarPositionDescription = 'The position of the sidebar'
export const StepInto = 'Step Into'
export const StepOut = 'Step Out'
export const StepOver = 'Step Over'
export const Stop = 'Stop'
export const Telemetry = 'Telemetry'
export const TelemetryDescription = 'Enable telemetry collection'
export const Theme = 'Theme'
export const ThemeDescription = 'The color theme of the workbench'
export const TwoFactorAuth = 'Two Factor Auth'
export const TwoFactorAuthDescription = 'Enable two factor authentication'
export const Watch = 'Watch'
export const WindowSize = 'Window Size'
export const WindowSizeDescription = 'The default window size'
export const WindowTitle = 'Window Title'
export const WindowTitleDescription = 'The title shown in the window'
export const With = '`With` block'
export const PauseOnExceptions = 'Pause on Exceptions'
export const PauseOnUncaughtExceptions = 'Pause on uncaught Exceptions'
export const NoWatchExpression = 'No Watch Expression'
export const DeleteWatchExpression = 'Delete Watch Expression'
export const DeleteAllWatchExpressions = 'Delete All Watch Expressions'
export const NoSettingsMatching = 'No settings matching "{PH1}" found'

// Text Editor Settings
export const WordWrap = 'Word Wrap'
export const WordWrapDescription = 'Controls how lines should wrap'
export const LineNumbers = 'Line Numbers'
export const LineNumbersDescription = 'Controls the display of line numbers'
export const Minimap = 'Minimap'
export const MinimapDescription = 'Controls whether the minimap is shown'
export const ScrollBeyondLastLine = 'Scroll Beyond Last Line'
export const ScrollBeyondLastLineDescription = 'Controls whether the editor will scroll beyond the last line'
export const SmoothScrolling = 'Smooth Scrolling'
export const SmoothScrollingDescription = 'Controls whether the editor will scroll smoothly'
export const CursorBlinking = 'Cursor Blinking'
export const CursorBlinkingDescription = 'Controls how the cursor should blink'
export const CursorStyle = 'Cursor Style'
export const CursorStyleDescription = 'Controls the cursor style'
export const CursorWidth = 'Cursor Width'
export const CursorWidthDescription = 'Controls the width of the cursor'
export const TabSize = 'Tab Size'
export const TabSizeDescription = 'The number of spaces a tab is equal to'
export const InsertSpaces = 'Insert Spaces'
export const InsertSpacesDescription = 'Insert spaces when pressing Tab'
export const DetectIndentation = 'Detect Indentation'
export const DetectIndentationDescription = 'Controls whether the editor will automatically adjust the indentation'
export const TrimAutoWhitespace = 'Trim Auto Whitespace'
export const TrimAutoWhitespaceDescription = 'Remove trailing auto inserted whitespace'
export const LargeFileOptimizations = 'Large File Optimizations'
export const LargeFileOptimizationsDescription = 'Special handling for large files to disable certain features'
export const RenderWhitespace = 'Render Whitespace'
export const RenderWhitespaceDescription = 'Controls how the editor should render whitespace characters'
export const RenderControlCharacters = 'Render Control Characters'
export const RenderControlCharactersDescription = 'Controls whether the editor should render control characters'
export const RenderLineHighlight = 'Render Line Highlight'
export const RenderLineHighlightDescription = 'Controls how the editor should render the current line highlight'
export const CodeLens = 'Code Lens'
export const CodeLensDescription = 'Controls whether the editor shows CodeLens'
export const Folding = 'Folding'
export const FoldingDescription = 'Controls whether the editor has code folding enabled'
export const ShowFoldingControls = 'Show Folding Controls'
export const ShowFoldingControlsDescription = 'Controls when the folding controls on the gutter are automatically hidden'
export const UnfoldOnClickAfterEnd = 'Unfold On Click After End'
export const UnfoldOnClickAfterEndDescription = 'Controls whether clicking on the empty content after a folded line will unfold the line'
export const Links = 'Links'
export const LinksDescription = 'Controls whether the editor should detect links and make them clickable'
export const ColorDecorators = 'Color Decorators'
export const ColorDecoratorsDescription = 'Controls whether the editor should render the inline color decorators and color picker'
export const Lightbulb = 'Lightbulb'
export const LightbulbDescription = 'Controls whether the editor should show the lightbulb code action'
export const CodeActionsOnSave = 'Code Actions On Save'
export const CodeActionsOnSaveDescription = 'Code actions to be run on save'
export const FormatOnPaste = 'Format On Paste'
export const FormatOnPasteDescription = 'Format a file on paste'
export const FormatOnType = 'Format On Type'
export const FormatOnTypeDescription = 'Format a file on type'
export const AcceptSuggestionOnCommitCharacter = 'Accept Suggestion On Commit Character'
export const AcceptSuggestionOnCommitCharacterDescription = 'Controls if suggestions should be accepted on commit characters'
export const AcceptSuggestionOnEnter = 'Accept Suggestion On Enter'
export const AcceptSuggestionOnEnterDescription = 'Controls if suggestions should be accepted on Enter'
export const TabCompletion = 'Tab Completion'
export const TabCompletionDescription = 'Enables tab completions'
export const WordBasedSuggestions = 'Word Based Suggestions'
export const WordBasedSuggestionsDescription = 'Controls whether completions should be computed based on words in the document'
export const SuggestOnTriggerCharacters = 'Suggest On Trigger Characters'
export const SuggestOnTriggerCharactersDescription = 'Controls whether suggestions should automatically show up when typing trigger characters'
export const AcceptSuggestionOnEnter_2 = 'Accept Suggestion On Enter'
export const AcceptSuggestionOnEnter_2Description = 'Controls if suggestions should be accepted on Enter'
export const QuickSuggestions = 'Quick Suggestions'
export const QuickSuggestionsDescription = 'Controls whether suggestions should automatically show up while typing'
export const ParameterHints = 'Parameter Hints'
export const ParameterHintsDescription = 'Controls whether the editor should show parameter hints'
export const AutoClosingBrackets = 'Auto Closing Brackets'
export const AutoClosingBracketsDescription = 'Controls whether the editor should automatically close brackets after opening them'
export const AutoClosingQuotes = 'Auto Closing Quotes'
export const AutoClosingQuotesDescription = 'Controls whether the editor should automatically close quotes after opening them'
export const AutoClosingOvertype = 'Auto Closing Overtype'
export const AutoClosingOvertypeDescription = 'Controls whether the editor should type over closing quotes or brackets'
export const AutoClosingDelete = 'Auto Closing Delete'
export const AutoClosingDeleteDescription = 'Controls whether the editor should remove adjacent closing quotes or brackets when deleting'
export const AutoSurround = 'Auto Surround'
export const AutoSurroundDescription = 'Controls whether the editor should automatically surround selections'
export const BracketPairColorization = 'Bracket Pair Colorization'
export const BracketPairColorizationDescription = 'Controls whether the editor should enable bracket pair colorization'
export const Guides = 'Guides'
export const GuidesDescription = 'Controls whether the editor should render bracket pair guides'
export const UnfoldOnClickAfterEnd_2 = 'Unfold On Click After End'
export const UnfoldOnClickAfterEnd_2Description = 'Controls whether clicking on the empty content after a folded line will unfold the line'
export const DragAndDrop = 'Drag And Drop'
export const DragAndDropDescription = 'Controls whether the editor allows moving selections via drag and drop'
export const CopyWithSyntaxHighlighting = 'Copy With Syntax Highlighting'
export const CopyWithSyntaxHighlightingDescription = 'Controls whether syntax highlighting should be copied when copying text'
export const MultiCursorModifier = 'Multi Cursor Modifier'
export const MultiCursorModifierDescription = 'The modifier to be used to add multiple cursors with the mouse'
export const MultiCursorPaste = 'Multi Cursor Paste'
export const MultiCursorPasteDescription = 'Controls how the editor should handle multiple cursors when pasting'
export const OccurrencesHighlight = 'Occurrences Highlight'
export const OccurrencesHighlightDescription = 'Controls whether the editor should highlight similar matches to the selection'
export const SelectionHighlight = 'Selection Highlight'
export const SelectionHighlightDescription = 'Controls whether the editor should highlight similar matches to the selection'
export const SemanticHighlighting = 'Semantic Highlighting'
export const SemanticHighlightingDescription = 'Controls whether the editor should enable semantic highlighting'
export const TokenColorCustomizations = 'Token Color Customizations'
export const TokenColorCustomizationsDescription = 'Overrides editor syntax highlighting colors'
export const WorkbenchColorCustomizations = 'Workbench Color Customizations'
export const WorkbenchColorCustomizationsDescription = 'Overrides workbench colors'
export const EditorColorCustomizations = 'Editor Color Customizations'
export const EditorColorCustomizationsDescription = 'Overrides editor colors'
export const DiffEditor = 'Diff Editor'
export const DiffEditorDescription = 'Controls whether the diff editor shows the diff side by side or inline'
export const DiffWordWrap = 'Diff Word Wrap'
export const DiffWordWrapDescription = 'Controls whether the diff editor shows the diff side by side or inline'
export const DiffCodeLens = 'Diff Code Lens'
export const DiffCodeLensDescription = 'Controls whether the diff editor shows code lens'
export const DiffRenderSideBySide = 'Diff Render Side By Side'
export const DiffRenderSideBySideDescription = 'Controls whether the diff editor shows the diff side by side or inline'
export const DiffIgnoreTrimWhitespace = 'Diff Ignore Trim Whitespace'
export const DiffIgnoreTrimWhitespaceDescription = 'Controls whether the diff editor ignores changes in whitespace'
export const DiffRenderIndicators = 'Diff Render Indicators'
export const DiffRenderIndicatorsDescription = 'Controls whether the diff editor shows indicators'
export const DiffRenderOverviewRuler = 'Diff Render Overview Ruler'
export const DiffRenderOverviewRulerDescription = 'Controls whether the diff editor shows the overview ruler'
export const DiffRenderMarginRevertIcon = 'Diff Render Margin Revert Icon'
export const DiffRenderMarginRevertIconDescription = 'Controls whether the diff editor shows the revert icon in the margin'

// Additional Text Editor Settings
export const InsertMode = 'Insert Mode'
export const InsertModeDescription = 'Controls whether the editor is in insert mode'
export const OverwriteMode = 'Overwrite Mode'
export const OverwriteModeDescription = 'Controls whether the editor is in overwrite mode'
export const ReadOnly = 'Read Only'
export const ReadOnlyDescription = 'Controls whether the editor is read only'
export const AccessibilitySupport = 'Accessibility Support'
export const AccessibilitySupportDescription = 'Controls whether the editor should run in a mode where it is optimized for screen readers'
export const AutoIndent = 'Auto Indent'
export const AutoIndentDescription = 'Controls whether the editor should automatically adjust the indentation'
export const BracketMatching = 'Bracket Matching'
export const BracketMatchingDescription = 'Controls whether the editor should highlight matching brackets'
export const CenteredLayout = 'Centered Layout'
export const CenteredLayoutDescription = 'Controls whether the editor should use centered layout'
export const ColumnSelection = 'Column Selection'
export const ColumnSelectionDescription = 'Controls whether the editor should support column selection'
export const Contextmenu = 'Context Menu'
export const ContextmenuDescription = 'Controls whether the editor should show the context menu'
export const CopyWithSyntaxHighlighting_2 = 'Copy With Syntax Highlighting'
export const CopyWithSyntaxHighlighting_2Description = 'Controls whether syntax highlighting should be copied when copying text'
export const CursorSmoothCaretAnimation = 'Cursor Smooth Caret Animation'
export const CursorSmoothCaretAnimationDescription = 'Controls whether the cursor should be animated'
export const CursorSurroundingLines = 'Cursor Surrounding Lines'
export const CursorSurroundingLinesDescription = 'Controls the number of extra characters beyond which the editor will scroll horizontally'
export const CursorSurroundingLinesStyle = 'Cursor Surrounding Lines Style'
export const CursorSurroundingLinesStyleDescription = 'Controls when the cursor should be hidden'
export const DisableMonospaceOptimizations = 'Disable Monospace Optimizations'
export const DisableMonospaceOptimizationsDescription = 'Controls whether the editor should disable optimizations for monospace fonts'
export const DragAndDrop_2 = 'Drag And Drop'
export const DragAndDrop_2Description = 'Controls whether the editor allows moving selections via drag and drop'
export const EmptySelectionClipboard = 'Empty Selection Clipboard'
export const EmptySelectionClipboardDescription = 'Controls whether copying without a selection copies the current line'
export const ExtraEditorClassName = 'Extra Editor Class Name'
export const ExtraEditorClassNameDescription = 'An extra class name to add to the editor'
export const FastScrollSensitivity = 'Fast Scroll Sensitivity'
export const FastScrollSensitivityDescription = 'Scrolling speed multiplier when pressing Alt'
export const Find = 'Find'
export const FindDescription = 'Controls whether the editor should add extra space on the bottom'
export const FixedOverflowWidgets = 'Fixed Overflow Widgets'
export const FixedOverflowWidgetsDescription = 'Controls whether the editor should scroll beyond the last line'
export const FoldingStrategy = 'Folding Strategy'
export const FoldingStrategyDescription = 'Controls the folding strategy'
export const FontLigatures = 'Font Ligatures'
export const FontLigaturesDescription = 'Enables/Disables font ligatures'
export const GlyphMargin = 'Glyph Margin'
export const GlyphMarginDescription = 'Controls whether the editor should render the vertical glyph margin'
export const GotoLocation = 'Go To Location'
export const GotoLocationDescription = 'Controls the behavior the \'Go to Definition\'-mouse gesture'
export const HideCursorInOverviewRuler = 'Hide Cursor In Overview Ruler'
export const HideCursorInOverviewRulerDescription = 'Controls whether the cursor should be hidden in the overview ruler'
export const Hover = 'Hover'
export const HoverDescription = 'Controls whether the editor should show hover'
export const InDiffEditor = 'In Diff Editor'
export const InDiffEditorDescription = 'Controls whether the editor should be in a diff editor'
export const LetterSpacing = 'Letter Spacing'
export const LetterSpacingDescription = 'The letter spacing'
export const LightbulbEnabled = 'Lightbulb Enabled'
export const LightbulbEnabledDescription = 'Controls whether the editor should show the lightbulb code action'
export const LineDecorationsWidth = 'Line Decorations Width'
export const LineDecorationsWidthDescription = 'The width reserved for line decorations (in px)'
export const LineHeight = 'Line Height'
export const LineHeightDescription = 'The line height'
export const Links_2 = 'Links'
export const Links_2Description = 'Controls whether the editor should detect links and make them clickable'
export const MatchBrackets = 'Match Brackets'
export const MatchBracketsDescription = 'Controls whether the editor should highlight matching brackets'
export const MinimapEnabled = 'Minimap Enabled'
export const MinimapEnabledDescription = 'Controls whether the minimap is shown'
export const MouseWheelScrollSensitivity = 'Mouse Wheel Scroll Sensitivity'
export const MouseWheelScrollSensitivityDescription = 'A multiplier to be used on the deltaX and deltaY of mouse wheel scroll events'
export const MouseWheelZoom = 'Mouse Wheel Zoom'
export const MouseWheelZoomDescription = 'Zoom the font of the editor when using mouse wheel and holding Ctrl'
export const MultiCursorMergeOverlapping = 'Multi Cursor Merge Overlapping'
export const MultiCursorMergeOverlappingDescription = 'Merge overlapping selections'
export const OccurrencesHighlight_2 = 'Occurrences Highlight'
export const OccurrencesHighlight_2Description = 'Controls whether the editor should highlight similar matches to the selection'
export const OverviewRulerBorder = 'Overview Ruler Border'
export const OverviewRulerBorderDescription = 'Controls whether a border should be drawn around the overview ruler'
export const OverviewRulerLanes = 'Overview Ruler Lanes'
export const OverviewRulerLanesDescription = 'Controls the number of decorations that can show in the overview ruler'
export const ParameterHints_2 = 'Parameter Hints'
export const ParameterHints_2Description = 'Controls whether the editor should show parameter hints'
export const PeekWidgetDefaultFocus = 'Peek Widget Default Focus'
export const PeekWidgetDefaultFocusDescription = 'Controls if the peek widget should be focused by default'
export const QuickSuggestions_2 = 'Quick Suggestions'
export const QuickSuggestions_2Description = 'Controls whether suggestions should automatically show up while typing'
export const QuickSuggestionsDelay = 'Quick Suggestions Delay'
export const QuickSuggestionsDelayDescription = 'Controls the delay in milliseconds after which quick suggestions will show up'
export const ReadOnly_2 = 'Read Only'
export const ReadOnly_2Description = 'Controls whether the editor is read only'
export const RenderControlCharacters_2 = 'Render Control Characters'
export const RenderControlCharacters_2Description = 'Controls whether the editor should render control characters'
export const RenderFinalNewline = 'Render Final Newline'
export const RenderFinalNewlineDescription = 'Controls whether the editor should render the final newline as a space'
export const RenderLineHighlight_2 = 'Render Line Highlight'
export const RenderLineHighlight_2Description = 'Controls how the editor should render the current line highlight'
export const RenderValidationDecorations = 'Render Validation Decorations'
export const RenderValidationDecorationsDescription = 'Controls whether the editor should render validation decorations'
export const RenderWhitespace_2 = 'Render Whitespace'
export const RenderWhitespace_2Description = 'Controls how the editor should render whitespace characters'
export const RevealHorizontalRightPadding = 'Reveal Horizontal Right Padding'
export const RevealHorizontalRightPaddingDescription = 'When revealing the cursor, a virtual padding (px) is added to the cursor, turning on a block cursor'
export const RoundedSelection = 'Rounded Selection'
export const RoundedSelectionDescription = 'Controls whether selections should have rounded corners'
export const Rulers = 'Rulers'
export const RulersDescription = 'Render vertical rulers at a certain number of monospace characters'
export const ScrollBeyondLastColumn = 'Scroll Beyond Last Column'
export const ScrollBeyondLastColumnDescription = 'Controls how many characters the editor will scroll horizontally'
export const ScrollBeyondLastLine_2 = 'Scroll Beyond Last Line'
export const ScrollBeyondLastLine_2Description = 'Controls whether the editor will scroll beyond the last line'
export const Scrollbar = 'Scrollbar'
export const ScrollbarDescription = 'Controls the visibility and behavior of the scrollbars'
export const ScrollPredominantAxis = 'Scroll Predominant Axis'
export const ScrollPredominantAxisDescription = 'Scroll only along the predominant axis when scrolling both vertically and horizontally at the same time'
export const SelectionClipboard = 'Selection Clipboard'
export const SelectionClipboardDescription = 'Controls whether the editor should use the CLIPBOARD selection'
export const SelectionHighlight_2 = 'Selection Highlight'
export const SelectionHighlight_2Description = 'Controls whether the editor should highlight similar matches to the selection'
export const ShowFoldingControls_2 = 'Show Folding Controls'
export const ShowFoldingControls_2Description = 'Controls when the folding controls on the gutter are automatically hidden'
export const ShowUnused = 'Show Unused'
export const ShowUnusedDescription = 'Controls fading out of unused code'
export const SnippetSuggestions = 'Snippet Suggestions'
export const SnippetSuggestionsDescription = 'Controls whether snippets are shown with other suggestions and how they are sorted'
export const SmoothScrolling_2 = 'Smooth Scrolling'
export const SmoothScrolling_2Description = 'Controls whether the editor will scroll smoothly'
export const Suggest = 'Suggest'
export const SuggestDescription = 'Controls whether suggestions should automatically show up while typing'
export const SuggestFontSize = 'Suggest Font Size'
export const SuggestFontSizeDescription = 'Font size for the suggest widget'
export const SuggestLineHeight = 'Suggest Line Height'
export const SuggestLineHeightDescription = 'Line height for the suggest widget'
export const SuggestOnTriggerCharacters_2 = 'Suggest On Trigger Characters'
export const SuggestOnTriggerCharacters_2Description = 'Controls whether suggestions should automatically show up when typing trigger characters'
export const SuggestSelection = 'Suggest Selection'
export const SuggestSelectionDescription = 'Controls how suggestions are selected when showing the suggest widget'
export const TabCompletion_2 = 'Tab Completion'
export const TabCompletion_2Description = 'Enables tab completions'
export const UnfoldOnClickAfterEnd_3 = 'Unfold On Click After End'
export const UnfoldOnClickAfterEnd_3Description = 'Controls whether clicking on the empty content after a folded line will unfold the line'
export const UseTabStops = 'Use Tab Stops'
export const UseTabStopsDescription = 'Inserting and deleting whitespace follows tab stops'
export const WordBasedSuggestions_2 = 'Word Based Suggestions'
export const WordBasedSuggestions_2Description = 'Controls whether completions should be computed based on words in the document'
export const WordSeparators = 'Word Separators'
export const WordSeparatorsDescription = 'Characters that will be used as word separators when doing word related navigations or operations'
export const WordWrap_2 = 'Word Wrap'
export const WordWrap_2Description = 'Controls how lines should wrap'
export const WrappingIndent = 'Wrapping Indent'
export const WrappingIndentDescription = 'Controls the indentation of wrapped lines'
