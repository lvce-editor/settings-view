import type { SettingItem } from '../SettingItem/SettingItem.ts'
import * as InputName from '../InputName/InputName.ts'
import * as SettingItemType from '../SettingItemType/SettingItemType.ts'
import * as SettingStrings from '../SettingStrings/SettingStrings.ts'

export const getSettingItems = async (): Promise<readonly SettingItem[]> => {
  return [
    {
      id: 'Editor.fontSize',
      heading: SettingStrings.fontSize(),
      description: SettingStrings.fontSizeDescription(),
      type: SettingItemType.Number,
      value: 15,
      category: InputName.TextEditorTab,
    },
    {
      id: 'Editor.fontFamily',
      heading: SettingStrings.fontFamily(),
      description: SettingStrings.fontFamilyDescription(),
      type: SettingItemType.String,
      value: 'Fira Code',
      category: InputName.TextEditorTab,
    },
    // Text Editor Settings
    {
      id: 'Editor.wordWrap',
      heading: SettingStrings.wordWrap(),
      description: SettingStrings.wordWrapDescription(),
      type: SettingItemType.Enum,
      value: 'off',
      category: InputName.TextEditorTab,
      options: [
        {
          id: 'on',
          label: 'On', // i18n
        },
        {
          id: 'off',
          label: 'off', // i18n
        },
      ],
    },
    {
      id: 'Editor.lineNumbers',
      heading: SettingStrings.lineNumbers(),
      description: SettingStrings.lineNumbersDescription(),
      type: SettingItemType.Enum,
      value: 'on',
      category: InputName.TextEditorTab,
      options: [
        {
          id: 'on',
          label: 'On', // i18n
        },
        {
          id: 'off',
          label: 'off', // i18n
        },
      ],
    },
    {
      id: 'Editor.minimap',
      heading: SettingStrings.minimap(),
      description: SettingStrings.minimapDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'Editor.scrollBeyondLastLine',
      heading: SettingStrings.scrollBeyondLastLine(),
      description: SettingStrings.scrollBeyondLastLineDescription(),
      type: SettingItemType.Boolean,
      value: 'false',
      category: InputName.TextEditorTab,
    },
    {
      id: 'Editor.smoothScrolling',
      heading: SettingStrings.smoothScrolling(),
      description: SettingStrings.smoothScrollingDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'Editor.cursorBlinking',
      heading: SettingStrings.cursorBlinking(),
      description: SettingStrings.cursorBlinkingDescription(),
      type: SettingItemType.String,
      value: 'blink',
      category: InputName.TextEditorTab,
    },
    {
      id: 'Editor.cursorStyle',
      heading: SettingStrings.cursorStyle(),
      description: SettingStrings.cursorStyleDescription(),
      type: SettingItemType.String,
      value: 'line',
      category: InputName.TextEditorTab,
    },
    {
      id: 'Editor.cursorWidth',
      heading: SettingStrings.cursorWidth(),
      description: SettingStrings.cursorWidthDescription(),
      type: SettingItemType.Number,
      value: '0',
      category: InputName.TextEditorTab,
    },
    {
      id: 'Editor.tabSize',
      heading: SettingStrings.tabSize(),
      description: SettingStrings.tabSizeDescription(),
      type: SettingItemType.Number,
      value: '4',
      category: InputName.TextEditorTab,
    },
    {
      id: 'Editor.insertSpaces',
      heading: SettingStrings.insertSpaces(),
      description: SettingStrings.insertSpacesDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'Editor.detectIndentation',
      heading: SettingStrings.detectIndentation(),
      description: SettingStrings.detectIndentationDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'Editor.trimAutoWhitespace',
      heading: SettingStrings.trimAutoWhitespace(),
      description: SettingStrings.trimAutoWhitespaceDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'Editor.largeFileOptimizations',
      heading: SettingStrings.largeFileOptimizations(),
      description: SettingStrings.largeFileOptimizationsDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'Editor.renderWhitespace',
      heading: SettingStrings.renderWhitespace(),
      description: SettingStrings.renderWhitespaceDescription(),
      type: SettingItemType.String,
      value: 'selection',
      category: InputName.TextEditorTab,
    },
    {
      id: 'Editor.renderControlCharacters',
      heading: SettingStrings.renderControlCharacters(),
      description: SettingStrings.renderControlCharactersDescription(),
      type: SettingItemType.Boolean,
      value: 'false',
      category: InputName.TextEditorTab,
    },
    {
      id: 'Editor.renderLineHighlight',
      heading: SettingStrings.renderLineHighlight(),
      description: SettingStrings.renderLineHighlightDescription(),
      type: SettingItemType.String,
      value: 'line',
      category: InputName.TextEditorTab,
    },
    {
      id: 'Editor.codeLens',
      heading: SettingStrings.codeLens(),
      description: SettingStrings.codeLensDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'Editor.folding',
      heading: SettingStrings.folding(),
      description: SettingStrings.foldingDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'Editor.showFoldingControls',
      heading: SettingStrings.showFoldingControls(),
      description: SettingStrings.showFoldingControlsDescription(),
      type: SettingItemType.String,
      value: 'mouseover',
      category: InputName.TextEditorTab,
    },
    {
      id: 'Editor.unfoldOnClickAfterEnd',
      heading: SettingStrings.unfoldOnClickAfterEnd(),
      description: SettingStrings.unfoldOnClickAfterEndDescription(),
      type: SettingItemType.Boolean,
      value: 'false',
      category: InputName.TextEditorTab,
    },
    {
      id: 'Editor.links',
      heading: SettingStrings.links(),
      description: SettingStrings.linksDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'colorDecorators',
      heading: SettingStrings.colorDecorators(),
      description: SettingStrings.colorDecoratorsDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'lightbulb',
      heading: SettingStrings.lightbulb(),
      description: SettingStrings.lightbulbDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'codeActionsOnSave',
      heading: SettingStrings.codeActionsOnSave(),
      description: SettingStrings.codeActionsOnSaveDescription(),
      type: SettingItemType.Boolean,
      value: 'false',
      category: InputName.TextEditorTab,
    },
    {
      id: 'formatOnPaste',
      heading: SettingStrings.formatOnPaste(),
      description: SettingStrings.formatOnPasteDescription(),
      type: SettingItemType.Boolean,
      value: 'false',
      category: InputName.TextEditorTab,
    },
    {
      id: 'formatOnType',
      heading: SettingStrings.formatOnType(),
      description: SettingStrings.formatOnTypeDescription(),
      type: SettingItemType.Boolean,
      value: 'false',
      category: InputName.TextEditorTab,
    },
    {
      id: 'acceptSuggestionOnCommitCharacter',
      heading: SettingStrings.acceptSuggestionOnCommitCharacter(),
      description: SettingStrings.acceptSuggestionOnCommitCharacterDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'acceptSuggestionOnEnter',
      heading: SettingStrings.acceptSuggestionOnEnter(),
      description: SettingStrings.acceptSuggestionOnEnterDescription(),
      type: SettingItemType.String,
      value: 'on',
      category: InputName.TextEditorTab,
    },
    {
      id: 'tabCompletion',
      heading: SettingStrings.tabCompletion(),
      description: SettingStrings.tabCompletionDescription(),
      type: SettingItemType.String,
      value: 'on',
      category: InputName.TextEditorTab,
    },
    {
      id: 'wordBasedSuggestions',
      heading: SettingStrings.wordBasedSuggestions(),
      description: SettingStrings.wordBasedSuggestionsDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'suggestOnTriggerCharacters',
      heading: SettingStrings.suggestOnTriggerCharacters(),
      description: SettingStrings.suggestOnTriggerCharactersDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'quickSuggestions',
      heading: SettingStrings.quickSuggestions(),
      description: SettingStrings.quickSuggestionsDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'parameterHints',
      heading: SettingStrings.parameterHints(),
      description: SettingStrings.parameterHintsDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'autoClosingBrackets',
      heading: SettingStrings.autoClosingBrackets(),
      description: SettingStrings.autoClosingBracketsDescription(),
      type: SettingItemType.String,
      value: 'always',
      category: InputName.TextEditorTab,
    },
    {
      id: 'autoClosingQuotes',
      heading: SettingStrings.autoClosingQuotes(),
      description: SettingStrings.autoClosingQuotesDescription(),
      type: SettingItemType.String,
      value: 'always',
      category: InputName.TextEditorTab,
    },
    {
      id: 'autoClosingOvertype',
      heading: SettingStrings.autoClosingOvertype(),
      description: SettingStrings.autoClosingOvertypeDescription(),
      type: SettingItemType.String,
      value: 'auto',
      category: InputName.TextEditorTab,
    },
    {
      id: 'autoClosingDelete',
      heading: SettingStrings.autoClosingDelete(),
      description: SettingStrings.autoClosingDeleteDescription(),
      type: SettingItemType.String,
      value: 'auto',
      category: InputName.TextEditorTab,
    },
    {
      id: 'autoSurround',
      heading: SettingStrings.autoSurround(),
      description: SettingStrings.autoSurroundDescription(),
      type: SettingItemType.String,
      value: 'quotes',
      category: InputName.TextEditorTab,
    },
    {
      id: 'bracketPairColorization',
      heading: SettingStrings.bracketPairColorization(),
      description: SettingStrings.bracketPairColorizationDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'guides',
      heading: SettingStrings.guides(),
      description: SettingStrings.guidesDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'dragAndDrop',
      heading: SettingStrings.dragAndDrop(),
      description: SettingStrings.dragAndDropDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'copyWithSyntaxHighlighting',
      heading: SettingStrings.copyWithSyntaxHighlighting(),
      description: SettingStrings.copyWithSyntaxHighlightingDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'multiCursorModifier',
      heading: SettingStrings.multiCursorModifier(),
      description: SettingStrings.multiCursorModifierDescription(),
      type: SettingItemType.String,
      value: 'alt',
      category: InputName.TextEditorTab,
    },
    {
      id: 'multiCursorPaste',
      heading: SettingStrings.multiCursorPaste(),
      description: SettingStrings.multiCursorPasteDescription(),
      type: SettingItemType.String,
      value: 'full',
      category: InputName.TextEditorTab,
    },
    {
      id: 'occurrencesHighlight',
      heading: SettingStrings.occurrencesHighlight(),
      description: SettingStrings.occurrencesHighlightDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'selectionHighlight',
      heading: SettingStrings.selectionHighlight(),
      description: SettingStrings.selectionHighlightDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'semanticHighlighting',
      heading: SettingStrings.semanticHighlighting(),
      description: SettingStrings.semanticHighlightingDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'tokenColorCustomizations',
      heading: SettingStrings.tokenColorCustomizations(),
      description: SettingStrings.tokenColorCustomizationsDescription(),
      type: SettingItemType.String,
      value: '{}',
      category: InputName.TextEditorTab,
    },
    {
      id: 'workbenchColorCustomizations',
      heading: SettingStrings.workbenchColorCustomizations(),
      description: SettingStrings.workbenchColorCustomizationsDescription(),
      type: SettingItemType.String,
      value: '{}',
      category: InputName.TextEditorTab,
    },
    {
      id: 'editorColorCustomizations',
      heading: SettingStrings.editorColorCustomizations(),
      description: SettingStrings.editorColorCustomizationsDescription(),
      type: SettingItemType.String,
      value: '{}',
      category: InputName.TextEditorTab,
    },
    {
      id: 'diffEditor',
      heading: SettingStrings.diffEditor(),
      description: SettingStrings.diffEditorDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'diffWordWrap',
      heading: SettingStrings.diffWordWrap(),
      description: SettingStrings.diffWordWrapDescription(),
      type: SettingItemType.String,
      value: 'inherit',
      category: InputName.TextEditorTab,
    },
    {
      id: 'diffCodeLens',
      heading: SettingStrings.diffCodeLens(),
      description: SettingStrings.diffCodeLensDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'diffRenderSideBySide',
      heading: SettingStrings.diffRenderSideBySide(),
      description: SettingStrings.diffRenderSideBySideDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'diffIgnoreTrimWhitespace',
      heading: SettingStrings.diffIgnoreTrimWhitespace(),
      description: SettingStrings.diffIgnoreTrimWhitespaceDescription(),
      type: SettingItemType.Boolean,
      value: 'false',
      category: InputName.TextEditorTab,
    },
    {
      id: 'diffRenderIndicators',
      heading: SettingStrings.diffRenderIndicators(),
      description: SettingStrings.diffRenderIndicatorsDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'diffRenderOverviewRuler',
      heading: SettingStrings.diffRenderOverviewRuler(),
      description: SettingStrings.diffRenderOverviewRulerDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'diffRenderMarginRevertIcon',
      heading: SettingStrings.diffRenderMarginRevertIcon(),
      description: SettingStrings.diffRenderMarginRevertIconDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    // Additional Text Editor Settings
    {
      id: 'insertMode',
      heading: SettingStrings.insertMode(),
      description: SettingStrings.insertModeDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'overwriteMode',
      heading: SettingStrings.overwriteMode(),
      description: SettingStrings.overwriteModeDescription(),
      type: SettingItemType.Boolean,
      value: 'false',
      category: InputName.TextEditorTab,
    },
    {
      id: 'readOnly',
      heading: SettingStrings.readOnly(),
      description: SettingStrings.readOnlyDescription(),
      type: SettingItemType.Boolean,
      value: 'false',
      category: InputName.TextEditorTab,
    },
    {
      id: 'accessibilitySupport',
      heading: SettingStrings.accessibilitySupport(),
      description: SettingStrings.accessibilitySupportDescription(),
      type: SettingItemType.String,
      value: 'auto',
      category: InputName.TextEditorTab,
    },
    {
      id: 'autoIndent',
      heading: SettingStrings.autoIndent(),
      description: SettingStrings.autoIndentDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'bracketMatching',
      heading: SettingStrings.bracketMatching(),
      description: SettingStrings.bracketMatchingDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'centeredLayout',
      heading: SettingStrings.centeredLayout(),
      description: SettingStrings.centeredLayoutDescription(),
      type: SettingItemType.Boolean,
      value: 'false',
      category: InputName.TextEditorTab,
    },
    {
      id: 'columnSelection',
      heading: SettingStrings.columnSelection(),
      description: SettingStrings.columnSelectionDescription(),
      type: SettingItemType.Boolean,
      value: 'false',
      category: InputName.TextEditorTab,
    },
    {
      id: 'contextmenu',
      heading: SettingStrings.contextmenu(),
      description: SettingStrings.contextmenuDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'cursorSmoothCaretAnimation',
      heading: SettingStrings.cursorSmoothCaretAnimation(),
      description: SettingStrings.cursorSmoothCaretAnimationDescription(),
      type: SettingItemType.String,
      value: 'off',
      category: InputName.TextEditorTab,
    },
    {
      id: 'cursorSurroundingLines',
      heading: SettingStrings.cursorSurroundingLines(),
      description: SettingStrings.cursorSurroundingLinesDescription(),
      type: SettingItemType.Number,
      value: '3',
      category: InputName.TextEditorTab,
    },
    {
      id: 'cursorSurroundingLinesStyle',
      heading: SettingStrings.cursorSurroundingLinesStyle(),
      description: SettingStrings.cursorSurroundingLinesStyleDescription(),
      type: SettingItemType.String,
      value: 'all',
      category: InputName.TextEditorTab,
    },
    {
      id: 'disableMonospaceOptimizations',
      heading: SettingStrings.disableMonospaceOptimizations(),
      description: SettingStrings.disableMonospaceOptimizationsDescription(),
      type: SettingItemType.Boolean,
      value: 'false',
      category: InputName.TextEditorTab,
    },
    {
      id: 'emptySelectionClipboard',
      heading: SettingStrings.emptySelectionClipboard(),
      description: SettingStrings.emptySelectionClipboardDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'extraEditorClassName',
      heading: SettingStrings.extraEditorClassName(),
      description: SettingStrings.extraEditorClassNameDescription(),
      type: SettingItemType.String,
      value: '',
      category: InputName.TextEditorTab,
    },
    {
      id: 'fastScrollSensitivity',
      heading: SettingStrings.fastScrollSensitivity(),
      description: SettingStrings.fastScrollSensitivityDescription(),
      type: SettingItemType.Number,
      value: '5',
      category: InputName.TextEditorTab,
    },
    {
      id: 'find',
      heading: SettingStrings.find(),
      description: SettingStrings.findDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'fixedOverflowWidgets',
      heading: SettingStrings.fixedOverflowWidgets(),
      description: SettingStrings.fixedOverflowWidgetsDescription(),
      type: SettingItemType.Boolean,
      value: 'false',
      category: InputName.TextEditorTab,
    },
    {
      id: 'foldingStrategy',
      heading: SettingStrings.foldingStrategy(),
      description: SettingStrings.foldingStrategyDescription(),
      type: SettingItemType.String,
      value: 'auto',
      category: InputName.TextEditorTab,
    },
    {
      id: 'fontLigatures',
      heading: SettingStrings.fontLigatures(),
      description: SettingStrings.fontLigaturesDescription(),
      type: SettingItemType.Boolean,
      value: 'false',
      category: InputName.TextEditorTab,
    },
    {
      id: 'glyphMargin',
      heading: SettingStrings.glyphMargin(),
      description: SettingStrings.glyphMarginDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'gotoLocation',
      heading: SettingStrings.gotoLocation(),
      description: SettingStrings.gotoLocationDescription(),
      type: SettingItemType.String,
      value: 'mouse',
      category: InputName.TextEditorTab,
    },
    {
      id: 'hideCursorInOverviewRuler',
      heading: SettingStrings.hideCursorInOverviewRuler(),
      description: SettingStrings.hideCursorInOverviewRulerDescription(),
      type: SettingItemType.Boolean,
      value: 'false',
      category: InputName.TextEditorTab,
    },
    {
      id: 'hover',
      heading: SettingStrings.hover(),
      description: SettingStrings.hoverDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'inDiffEditor',
      heading: SettingStrings.inDiffEditor(),
      description: SettingStrings.inDiffEditorDescription(),
      type: SettingItemType.Boolean,
      value: 'false',
      category: InputName.TextEditorTab,
    },
    {
      id: 'letterSpacing',
      heading: SettingStrings.letterSpacing(),
      description: SettingStrings.letterSpacingDescription(),
      type: SettingItemType.Number,
      value: '0',
      category: InputName.TextEditorTab,
    },
    {
      id: 'lightbulbEnabled',
      heading: SettingStrings.lightbulbEnabled(),
      description: SettingStrings.lightbulbEnabledDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'lineDecorationsWidth',
      heading: SettingStrings.lineDecorationsWidth(),
      description: SettingStrings.lineDecorationsWidthDescription(),
      type: SettingItemType.Number,
      value: '10',
      category: InputName.TextEditorTab,
    },
    {
      id: 'lineHeight',
      heading: SettingStrings.lineHeight(),
      description: SettingStrings.lineHeightDescription(),
      type: SettingItemType.Number,
      value: '0',
      category: InputName.TextEditorTab,
    },
    {
      id: 'matchBrackets',
      heading: SettingStrings.matchBrackets(),
      description: SettingStrings.matchBracketsDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'minimapEnabled',
      heading: SettingStrings.minimapEnabled(),
      description: SettingStrings.minimapEnabledDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'mouseWheelScrollSensitivity',
      heading: SettingStrings.mouseWheelScrollSensitivity(),
      description: SettingStrings.mouseWheelScrollSensitivityDescription(),
      type: SettingItemType.Number,
      value: '1',
      category: InputName.TextEditorTab,
    },
    {
      id: 'mouseWheelZoom',
      heading: SettingStrings.mouseWheelZoom(),
      description: SettingStrings.mouseWheelZoomDescription(),
      type: SettingItemType.Boolean,
      value: 'false',
      category: InputName.TextEditorTab,
    },
    {
      id: 'multiCursorMergeOverlapping',
      heading: SettingStrings.multiCursorMergeOverlapping(),
      description: SettingStrings.multiCursorMergeOverlappingDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'overviewRulerBorder',
      heading: SettingStrings.overviewRulerBorder(),
      description: SettingStrings.overviewRulerBorderDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'overviewRulerLanes',
      heading: SettingStrings.overviewRulerLanes(),
      description: SettingStrings.overviewRulerLanesDescription(),
      type: SettingItemType.Number,
      value: '3',
      category: InputName.TextEditorTab,
    },
    {
      id: 'peekWidgetDefaultFocus',
      heading: SettingStrings.peekWidgetDefaultFocus(),
      description: SettingStrings.peekWidgetDefaultFocusDescription(),
      type: SettingItemType.String,
      value: 'editor',
      category: InputName.TextEditorTab,
    },
    {
      id: 'quickSuggestionsDelay',
      heading: SettingStrings.quickSuggestionsDelay(),
      description: SettingStrings.quickSuggestionsDelayDescription(),
      type: SettingItemType.Number,
      value: '10',
      category: InputName.TextEditorTab,
    },
    {
      id: 'renderFinalNewline',
      heading: SettingStrings.renderFinalNewline(),
      description: SettingStrings.renderFinalNewlineDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'renderValidationDecorations',
      heading: SettingStrings.renderValidationDecorations(),
      description: SettingStrings.renderValidationDecorationsDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'revealHorizontalRightPadding',
      heading: SettingStrings.revealHorizontalRightPadding(),
      description: SettingStrings.revealHorizontalRightPaddingDescription(),
      type: SettingItemType.Number,
      value: '30',
      category: InputName.TextEditorTab,
    },
    {
      id: 'roundedSelection',
      heading: SettingStrings.roundedSelection(),
      description: SettingStrings.roundedSelectionDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'rulers',
      heading: SettingStrings.rulers(),
      description: SettingStrings.rulersDescription(),
      type: SettingItemType.String,
      value: '[]',
      category: InputName.TextEditorTab,
    },
    {
      id: 'scrollBeyondLastColumn',
      heading: SettingStrings.scrollBeyondLastColumn(),
      description: SettingStrings.scrollBeyondLastColumnDescription(),
      type: SettingItemType.Number,
      value: '5',
      category: InputName.TextEditorTab,
    },
    {
      id: 'scrollbar',
      heading: SettingStrings.scrollbar(),
      description: SettingStrings.scrollbarDescription(),
      type: SettingItemType.String,
      value: 'auto',
      category: InputName.TextEditorTab,
    },
    {
      id: 'scrollPredominantAxis',
      heading: SettingStrings.scrollPredominantAxis(),
      description: SettingStrings.scrollPredominantAxisDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'selectionClipboard',
      heading: SettingStrings.selectionClipboard(),
      description: SettingStrings.selectionClipboardDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'Editor.background',
      heading: 'Editor background',
      description: 'Editor background color',
      type: SettingItemType.Color,
      value: '#567567',
      category: InputName.TextEditorTab,
    },
    {
      id: 'showUnused',
      heading: SettingStrings.showUnused(),
      description: SettingStrings.showUnusedDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'snippetSuggestions',
      heading: SettingStrings.snippetSuggestions(),
      description: SettingStrings.snippetSuggestionsDescription(),
      type: SettingItemType.String,
      value: 'bottom',
      category: InputName.TextEditorTab,
    },
    {
      id: 'suggest',
      heading: SettingStrings.suggest(),
      description: SettingStrings.suggestDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'suggestFontSize',
      heading: SettingStrings.suggestFontSize(),
      description: SettingStrings.suggestFontSizeDescription(),
      type: SettingItemType.Number,
      value: '0',
      category: InputName.TextEditorTab,
    },
    {
      id: 'suggestLineHeight',
      heading: SettingStrings.suggestLineHeight(),
      description: SettingStrings.suggestLineHeightDescription(),
      type: SettingItemType.Number,
      value: '0',
      category: InputName.TextEditorTab,
    },
    {
      id: 'suggestSelection',
      heading: SettingStrings.suggestSelection(),
      description: SettingStrings.suggestSelectionDescription(),
      type: SettingItemType.String,
      value: 'recentlyUsed',
      category: InputName.TextEditorTab,
    },
    {
      id: 'useTabStops',
      heading: SettingStrings.useTabStops(),
      description: SettingStrings.useTabStopsDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.TextEditorTab,
    },
    {
      id: 'wordSeparators',
      heading: SettingStrings.wordSeparators(),
      description: SettingStrings.wordSeparatorsDescription(),
      type: SettingItemType.String,
      value: '`~!@#$%^&*()-=+[{]}\\|;:\'",.<>/?',
      category: InputName.TextEditorTab,
    },
    {
      id: 'wrappingIndent',
      heading: SettingStrings.wrappingIndent(),
      description: SettingStrings.wrappingIndentDescription(),
      type: SettingItemType.String,
      value: 'same',
      category: InputName.TextEditorTab,
    },
    {
      id: 'theme',
      heading: SettingStrings.theme(),
      description: SettingStrings.themeDescription(),
      type: SettingItemType.String,
      value: 'Dark',
      category: InputName.WorkbenchTab,
    },
    {
      id: 'sidebarPosition',
      heading: SettingStrings.sidebarPosition(),
      description: SettingStrings.sidebarPositionDescription(),
      type: SettingItemType.String,
      value: 'Left',
      category: InputName.WorkbenchTab,
    },
    {
      id: 'windowTitle',
      heading: SettingStrings.windowTitle(),
      description: SettingStrings.windowTitleDescription(),
      type: SettingItemType.String,
      value: 'Settings View',
      category: InputName.WindowTab,
    },
    {
      id: 'windowSize',
      heading: SettingStrings.windowSize(),
      description: SettingStrings.windowSizeDescription(),
      type: SettingItemType.String,
      value: '1024x768',
      category: InputName.WindowTab,
    },
    {
      id: 'autoSave',
      heading: SettingStrings.autoSave(),
      description: SettingStrings.autoSaveDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.FeaturesTab,
    },
    {
      id: 'formatOnSave',
      heading: SettingStrings.formatOnSave(),
      description: SettingStrings.formatOnSaveDescription(),
      type: SettingItemType.Boolean,
      value: 'false',
      category: InputName.FeaturesTab,
    },
    {
      id: 'telemetry',
      heading: SettingStrings.telemetry(),
      description: SettingStrings.telemetryDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.ApplicationsTab,
    },
    {
      id: 'updates',
      heading: SettingStrings.autoUpdates(),
      description: SettingStrings.autoUpdatesDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.ApplicationsTab,
    },
    {
      id: 'encryption',
      heading: SettingStrings.fileEncryption(),
      description: SettingStrings.fileEncryptionDescription(),
      type: SettingItemType.Boolean,
      value: 'false',
      category: InputName.SecurityTab,
    },
    {
      id: 'twoFactor',
      heading: SettingStrings.twoFactorAuth(),
      description: SettingStrings.twoFactorAuthDescription(),
      type: SettingItemType.Boolean,
      value: 'false',
      category: InputName.SecurityTab,
    },
    {
      id: 'extensionsAutoUpdate',
      heading: SettingStrings.autoUpdateExtensions(),
      description: SettingStrings.autoUpdateExtensionsDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.ExtensionsTab,
    },
    {
      id: 'extensionRecommendations',
      heading: SettingStrings.extensionRecommendations(),
      description: SettingStrings.extensionRecommendationsDescription(),
      type: SettingItemType.Boolean,
      value: 'true',
      category: InputName.ExtensionsTab,
    },
  ]
}
